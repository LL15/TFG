/* Generated By:JavaCC: Do not edit this line. LecturaDatosTokenManager.java */
package lecturaDatos;
import java.io.*;
import java.util.*;

/** Token Manager. */
public class LecturaDatosTokenManager implements LecturaDatosConstants
{

  /** Debug output. */
  public static  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public static  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private static final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private static final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
static private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
static private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 60:
         jjmatchedKind = 12;
         return jjMoveStringLiteralDfa1_0(0xffffffffff87e0L);
      case 62:
         return jjStopAtPos(0, 13);
      default :
         return jjMoveNfa_0(2, 0);
   }
}
static private int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 47:
         return jjMoveStringLiteralDfa2_0(active0, 0xaaa51514150540L);
      case 77:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000000000L);
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0xc000000000L);
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0x200L);
      case 100:
         return jjMoveStringLiteralDfa2_0(active0, 0x20000000000L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000L);
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0x4000000000000L);
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0xa0L);
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000000000L);
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0x10000000000000L);
      case 115:
         return jjMoveStringLiteralDfa2_0(active0, 0x500800000000L);
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0x400002ebea8000L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
static private int jjMoveStringLiteralDfa2_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa3_0(active0, 0xc000000000L);
      case 62:
         if ((active0 & 0x10000000000000L) != 0L)
            return jjStopAtPos(2, 52);
         break;
      case 69:
         return jjMoveStringLiteralDfa3_0(active0, 0x2000000000L);
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000008000L);
      case 98:
         return jjMoveStringLiteralDfa3_0(active0, 0x80400L);
      case 100:
         return jjMoveStringLiteralDfa3_0(active0, 0x400e0000000L);
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x2000000000080L);
      case 102:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000000000000L);
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0x8020140L);
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x40020200000000L);
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x1080000000000L);
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x4000000000200L);
      case 112:
         return jjMoveStringLiteralDfa3_0(active0, 0x20100000000000L);
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0x3e00000L);
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0xa01000000000L);
      case 116:
         return jjMoveStringLiteralDfa3_0(active0, 0x80400d14150020L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0);
}
static private int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa4_0(active0, 0xebc00000L);
      case 62:
         if ((active0 & 0x200000L) != 0L)
            return jjStopAtPos(3, 21);
         else if ((active0 & 0x10000000000L) != 0L)
            return jjStopAtPos(3, 40);
         else if ((active0 & 0x1000000000000L) != 0L)
            return jjStopAtPos(3, 48);
         else if ((active0 & 0x20000000000000L) != 0L)
            return jjStopAtPos(3, 53);
         break;
      case 84:
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000000L);
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x100000010080L);
      case 98:
         return jjMoveStringLiteralDfa4_0(active0, 0x108000L);
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000000000L);
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0x100000200L);
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0x20100L);
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0x80000000000L);
      case 104:
         return jjMoveStringLiteralDfa4_0(active0, 0x4010040000L);
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x80040400000000L);
      case 109:
         return jjMoveStringLiteralDfa4_0(active0, 0x42000000000020L);
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000000000000L);
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000000080400L);
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000L);
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0x400004000000L);
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0x801200000040L);
      case 118:
         return jjMoveStringLiteralDfa4_0(active0, 0x20000000000L);
      case 121:
         return jjMoveStringLiteralDfa4_0(active0, 0x800000000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0);
}
static private int jjMoveStringLiteralDfa4_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 32:
         if ((active0 & 0x20000000000L) != 0L)
            return jjStopAtPos(4, 41);
         return jjMoveStringLiteralDfa5_0(active0, 0x80000000000L);
      case 62:
         if ((active0 & 0x4000000L) != 0L)
            return jjStopAtPos(4, 26);
         else if ((active0 & 0x10000000L) != 0L)
            return jjStopAtPos(4, 28);
         else if ((active0 & 0x100000000L) != 0L)
            return jjStopAtPos(4, 32);
         else if ((active0 & 0x2000000000000L) != 0L)
            return jjStopAtPos(4, 49);
         break;
      case 65:
         return jjMoveStringLiteralDfa5_0(active0, 0x2000000000L);
      case 97:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000020100L);
      case 98:
         return jjMoveStringLiteralDfa5_0(active0, 0x80410000L);
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x69000000L);
      case 100:
         return jjMoveStringLiteralDfa5_0(active0, 0x80480L);
      case 101:
         return jjMoveStringLiteralDfa5_0(active0, 0x40000000040000L);
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x2800000L);
      case 108:
         return jjMoveStringLiteralDfa5_0(active0, 0x8a00008020L);
      case 109:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000000000040L);
      case 110:
         if ((active0 & 0x100000000000L) != 0L)
            return jjStopAtPos(4, 44);
         return jjMoveStringLiteralDfa5_0(active0, 0x8000000000000L);
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000100000L);
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x804000000000L);
      case 116:
         if ((active0 & 0x4000000000000L) != 0L)
            return jjStopAtPos(4, 50);
         return jjMoveStringLiteralDfa5_0(active0, 0x400000000L);
      case 118:
         return jjMoveStringLiteralDfa5_0(active0, 0x40000000000L);
      case 121:
         return jjMoveStringLiteralDfa5_0(active0, 0x1000000200L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0);
}
static private int jjMoveStringLiteralDfa5_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 32:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStopAtPos(5, 54);
         return jjMoveStringLiteralDfa6_0(active0, 0x2000000020L);
      case 62:
         if ((active0 & 0x80L) != 0L)
            return jjStopAtPos(5, 7);
         else if ((active0 & 0x200L) != 0L)
            return jjStopAtPos(5, 9);
         else if ((active0 & 0x40000000000L) != 0L)
            return jjStopAtPos(5, 42);
         break;
      case 97:
         return jjMoveStringLiteralDfa6_0(active0, 0x8000040000L);
      case 100:
         return jjMoveStringLiteralDfa6_0(active0, 0x2920100L);
      case 101:
         return jjMoveStringLiteralDfa6_0(active0, 0x80004a00008000L);
      case 103:
         return jjMoveStringLiteralDfa6_0(active0, 0x80400000L);
      case 108:
         return jjMoveStringLiteralDfa6_0(active0, 0x1449010040L);
      case 110:
         return jjMoveStringLiteralDfa6_0(active0, 0x600000000000L);
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0x800020000000L);
      case 115:
         return jjMoveStringLiteralDfa6_0(active0, 0x80000000000L);
      case 116:
         return jjMoveStringLiteralDfa6_0(active0, 0x8000000000000L);
      case 121:
         return jjMoveStringLiteralDfa6_0(active0, 0x80400L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0);
}
static private int jjMoveStringLiteralDfa6_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(4, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 32:
         if ((active0 & 0x8000L) != 0L)
            return jjStopAtPos(6, 15);
         else if ((active0 & 0x800000000L) != 0L)
            return jjStopAtPos(6, 35);
         break;
      case 61:
         return jjMoveStringLiteralDfa7_0(active0, 0x2800000L);
      case 62:
         if ((active0 & 0x40L) != 0L)
            return jjStopAtPos(6, 6);
         else if ((active0 & 0x100L) != 0L)
            return jjStopAtPos(6, 8);
         else if ((active0 & 0x400L) != 0L)
            return jjStopAtPos(6, 10);
         else if ((active0 & 0x20000L) != 0L)
            return jjStopAtPos(6, 17);
         else if ((active0 & 0x80000L) != 0L)
            return jjStopAtPos(6, 19);
         else if ((active0 & 0x200000000L) != 0L)
            return jjStopAtPos(6, 33);
         else if ((active0 & 0x200000000000L) != 0L)
            return jjStopAtPos(6, 45);
         else if ((active0 & 0x8000000000000L) != 0L)
            return jjStopAtPos(6, 51);
         else if ((active0 & 0x80000000000000L) != 0L)
            return jjStopAtPos(6, 55);
         break;
      case 72:
         return jjMoveStringLiteralDfa7_0(active0, 0x2000000000L);
      case 97:
         return jjMoveStringLiteralDfa7_0(active0, 0x49000000L);
      case 99:
         return jjMoveStringLiteralDfa7_0(active0, 0x80400000L);
      case 100:
         return jjMoveStringLiteralDfa7_0(active0, 0x40000L);
      case 101:
         return jjMoveStringLiteralDfa7_0(active0, 0x1400010000L);
      case 102:
         return jjMoveStringLiteralDfa7_0(active0, 0x4000000000L);
      case 103:
         return jjMoveStringLiteralDfa7_0(active0, 0x400000000000L);
      case 108:
         return jjMoveStringLiteralDfa7_0(active0, 0x20000000L);
      case 110:
         return jjMoveStringLiteralDfa7_0(active0, 0x800000000000L);
      case 114:
         return jjMoveStringLiteralDfa7_0(active0, 0x80000000000L);
      case 115:
         return jjMoveStringLiteralDfa7_0(active0, 0x8000000000L);
      case 120:
         return jjMoveStringLiteralDfa7_0(active0, 0x20L);
      case 121:
         return jjMoveStringLiteralDfa7_0(active0, 0x100000L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0);
}
static private int jjMoveStringLiteralDfa7_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(5, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0);
      return 7;
   }
   switch(curChar)
   {
      case 34:
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 23;
            jjmatchedPos = 7;
         }
         return jjMoveStringLiteralDfa8_0(active0, 0x2000000L);
      case 61:
         return jjMoveStringLiteralDfa8_0(active0, 0x4000000000L);
      case 62:
         if ((active0 & 0x10000L) != 0L)
            return jjStopAtPos(7, 16);
         else if ((active0 & 0x40000L) != 0L)
            return jjStopAtPos(7, 18);
         else if ((active0 & 0x100000L) != 0L)
            return jjStopAtPos(7, 20);
         else if ((active0 & 0x400000000L) != 0L)
            return jjStopAtPos(7, 34);
         else if ((active0 & 0x1000000000L) != 0L)
            return jjStopAtPos(7, 36);
         else if ((active0 & 0x400000000000L) != 0L)
            return jjStopAtPos(7, 46);
         break;
      case 84:
         return jjMoveStringLiteralDfa8_0(active0, 0x2000000000L);
      case 99:
         return jjMoveStringLiteralDfa8_0(active0, 0x80000000000L);
      case 103:
         return jjMoveStringLiteralDfa8_0(active0, 0x800000000000L);
      case 109:
         return jjMoveStringLiteralDfa8_0(active0, 0x20L);
      case 111:
         return jjMoveStringLiteralDfa8_0(active0, 0x80400000L);
      case 115:
         return jjMoveStringLiteralDfa8_0(active0, 0x8069000000L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0);
}
static private int jjMoveStringLiteralDfa8_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(6, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0);
      return 8;
   }
   switch(curChar)
   {
      case 34:
         if ((active0 & 0x4000000000L) != 0L)
            return jjStopAtPos(8, 38);
         break;
      case 61:
         return jjMoveStringLiteralDfa9_0(active0, 0x88000000000L);
      case 62:
         if ((active0 & 0x800000000000L) != 0L)
            return jjStopAtPos(8, 47);
         break;
      case 84:
         return jjMoveStringLiteralDfa9_0(active0, 0x2000000000L);
      case 105:
         return jjMoveStringLiteralDfa9_0(active0, 0x2000000L);
      case 108:
         return jjMoveStringLiteralDfa9_0(active0, 0x80400020L);
      case 112:
         return jjMoveStringLiteralDfa9_0(active0, 0x20000000L);
      case 115:
         return jjMoveStringLiteralDfa9_0(active0, 0x49000000L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0);
}
static private int jjMoveStringLiteralDfa9_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0);
      return 9;
   }
   switch(curChar)
   {
      case 34:
         if ((active0 & 0x8000000000L) != 0L)
            return jjStopAtPos(9, 39);
         else if ((active0 & 0x80000000000L) != 0L)
            return jjStopAtPos(9, 43);
         break;
      case 61:
         return jjMoveStringLiteralDfa10_0(active0, 0x49000000L);
      case 80:
         return jjMoveStringLiteralDfa10_0(active0, 0x2000000000L);
      case 97:
         return jjMoveStringLiteralDfa10_0(active0, 0x20000000L);
      case 110:
         return jjMoveStringLiteralDfa10_0(active0, 0x20L);
      case 111:
         return jjMoveStringLiteralDfa10_0(active0, 0x80400000L);
      case 115:
         return jjMoveStringLiteralDfa10_0(active0, 0x2000000L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0);
}
static private int jjMoveStringLiteralDfa10_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0);
      return 10;
   }
   switch(curChar)
   {
      case 34:
         if ((active0 & 0x40000000L) != 0L)
            return jjStopAtPos(10, 30);
         return jjMoveStringLiteralDfa11_0(active0, 0x9000000L);
      case 45:
         return jjMoveStringLiteralDfa11_0(active0, 0x2000000000L);
      case 110:
         return jjMoveStringLiteralDfa11_0(active0, 0x20000000L);
      case 114:
         return jjMoveStringLiteralDfa11_0(active0, 0x80400000L);
      case 115:
         return jjMoveStringLiteralDfa11_0(active0, 0x2000020L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0);
}
static private int jjMoveStringLiteralDfa11_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0);
      return 11;
   }
   switch(curChar)
   {
      case 61:
         return jjMoveStringLiteralDfa12_0(active0, 0xa0400020L);
      case 69:
         return jjMoveStringLiteralDfa12_0(active0, 0x2000000000L);
      case 99:
         return jjMoveStringLiteralDfa12_0(active0, 0x8000000L);
      case 114:
         return jjMoveStringLiteralDfa12_0(active0, 0x1000000L);
      case 117:
         return jjMoveStringLiteralDfa12_0(active0, 0x2000000L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0);
}
static private int jjMoveStringLiteralDfa12_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0);
      return 12;
   }
   switch(curChar)
   {
      case 34:
         return jjMoveStringLiteralDfa13_0(active0, 0xa0400020L);
      case 81:
         return jjMoveStringLiteralDfa13_0(active0, 0x2000000000L);
      case 101:
         return jjMoveStringLiteralDfa13_0(active0, 0x2000000L);
      case 111:
         return jjMoveStringLiteralDfa13_0(active0, 0x9000000L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0);
}
static private int jjMoveStringLiteralDfa13_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(11, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0);
      return 13;
   }
   switch(curChar)
   {
      case 35:
         return jjMoveStringLiteralDfa14_0(active0, 0x80400000L);
      case 53:
         return jjMoveStringLiteralDfa14_0(active0, 0x20000000L);
      case 85:
         return jjMoveStringLiteralDfa14_0(active0, 0x2000000000L);
      case 104:
         return jjMoveStringLiteralDfa14_0(active0, 0x20L);
      case 108:
         return jjMoveStringLiteralDfa14_0(active0, 0x8000000L);
      case 114:
         return jjMoveStringLiteralDfa14_0(active0, 0x2000000L);
      case 119:
         return jjMoveStringLiteralDfa14_0(active0, 0x1000000L);
      default :
         break;
   }
   return jjStartNfa_0(12, active0);
}
static private int jjMoveStringLiteralDfa14_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(12, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, active0);
      return 14;
   }
   switch(curChar)
   {
      case 48:
         return jjMoveStringLiteralDfa15_0(active0, 0x400000L);
      case 56:
         return jjMoveStringLiteralDfa15_0(active0, 0x20000000L);
      case 72:
         return jjMoveStringLiteralDfa15_0(active0, 0x9000000L);
      case 73:
         return jjMoveStringLiteralDfa15_0(active0, 0x2000000000L);
      case 100:
         return jjMoveStringLiteralDfa15_0(active0, 0x80000000L);
      case 111:
         return jjMoveStringLiteralDfa15_0(active0, 0x2000000L);
      case 116:
         return jjMoveStringLiteralDfa15_0(active0, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(13, active0);
}
static private int jjMoveStringLiteralDfa15_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(13, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, active0);
      return 15;
   }
   switch(curChar)
   {
      case 34:
         return jjMoveStringLiteralDfa16_0(active0, 0x20000000L);
      case 48:
         return jjMoveStringLiteralDfa16_0(active0, 0x400000L);
      case 86:
         return jjMoveStringLiteralDfa16_0(active0, 0x2000000000L);
      case 100:
         return jjMoveStringLiteralDfa16_0(active0, 0x80000000L);
      case 101:
         return jjMoveStringLiteralDfa16_0(active0, 0x9000000L);
      case 116:
         return jjMoveStringLiteralDfa16_0(active0, 0x20L);
      case 119:
         if ((active0 & 0x2000000L) != 0L)
            return jjStopAtPos(15, 25);
         break;
      default :
         break;
   }
   return jjStartNfa_0(14, active0);
}
static private int jjMoveStringLiteralDfa16_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(14, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(15, active0);
      return 16;
   }
   switch(curChar)
   {
      case 51:
         return jjMoveStringLiteralDfa17_0(active0, 0x400000L);
      case 61:
         return jjMoveStringLiteralDfa17_0(active0, 0x2000000000L);
      case 62:
         if ((active0 & 0x20000000L) != 0L)
            return jjStopAtPos(16, 29);
         break;
      case 97:
         return jjMoveStringLiteralDfa17_0(active0, 0x9000000L);
      case 100:
         return jjMoveStringLiteralDfa17_0(active0, 0x80000000L);
      case 112:
         return jjMoveStringLiteralDfa17_0(active0, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(15, active0);
}
static private int jjMoveStringLiteralDfa17_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(15, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(16, active0);
      return 17;
   }
   switch(curChar)
   {
      case 34:
         return jjMoveStringLiteralDfa18_0(active0, 0x2000000000L);
      case 52:
         return jjMoveStringLiteralDfa18_0(active0, 0x400000L);
      case 58:
         return jjMoveStringLiteralDfa18_0(active0, 0x20L);
      case 100:
         return jjMoveStringLiteralDfa18_0(active0, 0x89000000L);
      default :
         break;
   }
   return jjStartNfa_0(16, active0);
}
static private int jjMoveStringLiteralDfa18_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(16, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(17, active0);
      return 18;
   }
   switch(curChar)
   {
      case 47:
         return jjMoveStringLiteralDfa19_0(active0, 0x20L);
      case 54:
         return jjMoveStringLiteralDfa19_0(active0, 0x400000L);
      case 67:
         return jjMoveStringLiteralDfa19_0(active0, 0x2000000000L);
      case 100:
         return jjMoveStringLiteralDfa19_0(active0, 0x80000000L);
      case 101:
         return jjMoveStringLiteralDfa19_0(active0, 0x9000000L);
      default :
         break;
   }
   return jjStartNfa_0(17, active0);
}
static private int jjMoveStringLiteralDfa19_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(17, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(18, active0);
      return 19;
   }
   switch(curChar)
   {
      case 47:
         return jjMoveStringLiteralDfa20_0(active0, 0x20L);
      case 54:
         return jjMoveStringLiteralDfa20_0(active0, 0x400000L);
      case 100:
         return jjMoveStringLiteralDfa20_0(active0, 0x80000000L);
      case 111:
         return jjMoveStringLiteralDfa20_0(active0, 0x2000000000L);
      case 114:
         return jjMoveStringLiteralDfa20_0(active0, 0x9000000L);
      default :
         break;
   }
   return jjStartNfa_0(18, active0);
}
static private int jjMoveStringLiteralDfa20_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(18, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(19, active0);
      return 20;
   }
   switch(curChar)
   {
      case 34:
         return jjMoveStringLiteralDfa21_0(active0, 0x81400000L);
      case 76:
         return jjMoveStringLiteralDfa21_0(active0, 0x8000000L);
      case 110:
         return jjMoveStringLiteralDfa21_0(active0, 0x2000000000L);
      case 119:
         return jjMoveStringLiteralDfa21_0(active0, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(19, active0);
}
static private int jjMoveStringLiteralDfa21_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(19, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(20, active0);
      return 21;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa22_0(active0, 0x80400000L);
      case 62:
         if ((active0 & 0x1000000L) != 0L)
            return jjStopAtPos(21, 24);
         break;
      case 105:
         return jjMoveStringLiteralDfa22_0(active0, 0x8000000L);
      case 116:
         return jjMoveStringLiteralDfa22_0(active0, 0x2000000000L);
      case 119:
         return jjMoveStringLiteralDfa22_0(active0, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(20, active0);
}
static private int jjMoveStringLiteralDfa22_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(20, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(21, active0);
      return 22;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa23_0(active0, 0x80000000L);
      case 101:
         return jjMoveStringLiteralDfa23_0(active0, 0x2000000000L);
      case 104:
         return jjMoveStringLiteralDfa23_0(active0, 0x400000L);
      case 110:
         return jjMoveStringLiteralDfa23_0(active0, 0x8000000L);
      case 119:
         return jjMoveStringLiteralDfa23_0(active0, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(21, active0);
}
static private int jjMoveStringLiteralDfa23_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(21, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(22, active0);
      return 23;
   }
   switch(curChar)
   {
      case 46:
         return jjMoveStringLiteralDfa24_0(active0, 0x20L);
      case 101:
         return jjMoveStringLiteralDfa24_0(active0, 0x400000L);
      case 107:
         return jjMoveStringLiteralDfa24_0(active0, 0x8000000L);
      case 110:
         return jjMoveStringLiteralDfa24_0(active0, 0x2000000000L);
      case 111:
         return jjMoveStringLiteralDfa24_0(active0, 0x80000000L);
      default :
         break;
   }
   return jjStartNfa_0(22, active0);
}
static private int jjMoveStringLiteralDfa24_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(22, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(23, active0);
      return 24;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa25_0(active0, 0x8000000L);
      case 105:
         return jjMoveStringLiteralDfa25_0(active0, 0x400000L);
      case 108:
         return jjMoveStringLiteralDfa25_0(active0, 0x80000000L);
      case 116:
         return jjMoveStringLiteralDfa25_0(active0, 0x2000000000L);
      case 119:
         return jjMoveStringLiteralDfa25_0(active0, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(23, active0);
}
static private int jjMoveStringLiteralDfa25_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(23, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(24, active0);
      return 25;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa26_0(active0, 0x2000000000L);
      case 51:
         return jjMoveStringLiteralDfa26_0(active0, 0x20L);
      case 103:
         return jjMoveStringLiteralDfa26_0(active0, 0x400000L);
      case 104:
         return jjMoveStringLiteralDfa26_0(active0, 0x8000000L);
      case 115:
         return jjMoveStringLiteralDfa26_0(active0, 0x80000000L);
      default :
         break;
   }
   return jjStartNfa_0(24, active0);
}
static private int jjMoveStringLiteralDfa26_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(24, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(25, active0);
      return 26;
   }
   switch(curChar)
   {
      case 46:
         return jjMoveStringLiteralDfa27_0(active0, 0x20L);
      case 84:
         return jjMoveStringLiteralDfa27_0(active0, 0x2000000000L);
      case 101:
         return jjMoveStringLiteralDfa27_0(active0, 0x8000000L);
      case 104:
         return jjMoveStringLiteralDfa27_0(active0, 0x400000L);
      case 112:
         return jjMoveStringLiteralDfa27_0(active0, 0x80000000L);
      default :
         break;
   }
   return jjStartNfa_0(25, active0);
}
static private int jjMoveStringLiteralDfa27_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(25, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(26, active0);
      return 27;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa28_0(active0, 0x88000000L);
      case 111:
         return jjMoveStringLiteralDfa28_0(active0, 0x20L);
      case 116:
         return jjMoveStringLiteralDfa28_0(active0, 0x400000L);
      case 121:
         return jjMoveStringLiteralDfa28_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(26, active0);
}
static private int jjMoveStringLiteralDfa28_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(26, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(27, active0);
      return 28;
   }
   switch(curChar)
   {
      case 61:
         return jjMoveStringLiteralDfa29_0(active0, 0x400000L);
      case 100:
         return jjMoveStringLiteralDfa29_0(active0, 0x8000000L);
      case 110:
         return jjMoveStringLiteralDfa29_0(active0, 0x80000000L);
      case 112:
         return jjMoveStringLiteralDfa29_0(active0, 0x2000000000L);
      case 114:
         return jjMoveStringLiteralDfa29_0(active0, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(27, active0);
}
static private int jjMoveStringLiteralDfa29_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(27, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(28, active0);
      return 29;
   }
   switch(curChar)
   {
      case 34:
         return jjMoveStringLiteralDfa30_0(active0, 0x400000L);
      case 61:
         return jjMoveStringLiteralDfa30_0(active0, 0x80000000L);
      case 101:
         return jjMoveStringLiteralDfa30_0(active0, 0x2008000000L);
      case 103:
         return jjMoveStringLiteralDfa30_0(active0, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(28, active0);
}
static private int jjMoveStringLiteralDfa30_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(28, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(29, active0);
      return 30;
   }
   switch(curChar)
   {
      case 34:
         return jjMoveStringLiteralDfa31_0(active0, 0x2080000000L);
      case 47:
         return jjMoveStringLiteralDfa31_0(active0, 0x20L);
      case 51:
         return jjMoveStringLiteralDfa31_0(active0, 0x400000L);
      case 114:
         return jjMoveStringLiteralDfa31_0(active0, 0x8000000L);
      default :
         break;
   }
   return jjStartNfa_0(29, active0);
}
static private int jjMoveStringLiteralDfa31_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(29, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(30, active0);
      return 31;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa32_0(active0, 0x2000000000L);
      case 48:
         return jjMoveStringLiteralDfa32_0(active0, 0x400000L);
      case 53:
         return jjMoveStringLiteralDfa32_0(active0, 0x80000000L);
      case 84:
         return jjMoveStringLiteralDfa32_0(active0, 0x20L);
      case 114:
         return jjMoveStringLiteralDfa32_0(active0, 0x8000000L);
      default :
         break;
   }
   return jjStartNfa_0(30, active0);
}
static private int jjMoveStringLiteralDfa32_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(30, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(31, active0);
      return 32;
   }
   switch(curChar)
   {
      case 34:
         return jjMoveStringLiteralDfa33_0(active0, 0x400000L);
      case 56:
         return jjMoveStringLiteralDfa33_0(active0, 0x80000000L);
      case 67:
         return jjMoveStringLiteralDfa33_0(active0, 0x2000000000L);
      case 82:
         return jjMoveStringLiteralDfa33_0(active0, 0x20L);
      case 111:
         return jjMoveStringLiteralDfa33_0(active0, 0x8000000L);
      default :
         break;
   }
   return jjStartNfa_0(31, active0);
}
static private int jjMoveStringLiteralDfa33_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(31, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(32, active0);
      return 33;
   }
   switch(curChar)
   {
      case 34:
         return jjMoveStringLiteralDfa34_0(active0, 0x80000000L);
      case 47:
         return jjMoveStringLiteralDfa34_0(active0, 0x20L);
      case 62:
         if ((active0 & 0x400000L) != 0L)
            return jjStopAtPos(33, 22);
         break;
      case 111:
         return jjMoveStringLiteralDfa34_0(active0, 0x2000000000L);
      case 119:
         return jjMoveStringLiteralDfa34_0(active0, 0x8000000L);
      default :
         break;
   }
   return jjStartNfa_0(32, active0);
}
static private int jjMoveStringLiteralDfa34_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(32, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(33, active0);
      return 34;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x8000000L) != 0L)
            return jjStopAtPos(34, 27);
         break;
      case 62:
         if ((active0 & 0x80000000L) != 0L)
            return jjStopAtPos(34, 31);
         break;
      case 82:
         return jjMoveStringLiteralDfa35_0(active0, 0x20L);
      case 110:
         return jjMoveStringLiteralDfa35_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(33, active0);
}
static private int jjMoveStringLiteralDfa35_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(33, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(34, active0);
      return 35;
   }
   switch(curChar)
   {
      case 69:
         return jjMoveStringLiteralDfa36_0(active0, 0x20L);
      case 116:
         return jjMoveStringLiteralDfa36_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(34, active0);
}
static private int jjMoveStringLiteralDfa36_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(34, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(35, active0);
      return 36;
   }
   switch(curChar)
   {
      case 67:
         return jjMoveStringLiteralDfa37_0(active0, 0x20L);
      case 101:
         return jjMoveStringLiteralDfa37_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(35, active0);
}
static private int jjMoveStringLiteralDfa37_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(35, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(36, active0);
      return 37;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa38_0(active0, 0x20L);
      case 110:
         return jjMoveStringLiteralDfa38_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(36, active0);
}
static private int jjMoveStringLiteralDfa38_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(36, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(37, active0);
      return 38;
   }
   switch(curChar)
   {
      case 104:
         return jjMoveStringLiteralDfa39_0(active0, 0x20L);
      case 116:
         return jjMoveStringLiteralDfa39_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(37, active0);
}
static private int jjMoveStringLiteralDfa39_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(37, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(38, active0);
      return 39;
   }
   switch(curChar)
   {
      case 61:
         return jjMoveStringLiteralDfa40_0(active0, 0x2000000000L);
      case 116:
         return jjMoveStringLiteralDfa40_0(active0, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(38, active0);
}
static private int jjMoveStringLiteralDfa40_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(38, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(39, active0);
      return 40;
   }
   switch(curChar)
   {
      case 34:
         return jjMoveStringLiteralDfa41_0(active0, 0x2000000000L);
      case 109:
         return jjMoveStringLiteralDfa41_0(active0, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(39, active0);
}
static private int jjMoveStringLiteralDfa41_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(39, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(40, active0);
      return 41;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa42_0(active0, 0x2000000000L);
      case 108:
         return jjMoveStringLiteralDfa42_0(active0, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(40, active0);
}
static private int jjMoveStringLiteralDfa42_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(40, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(41, active0);
      return 42;
   }
   switch(curChar)
   {
      case 52:
         return jjMoveStringLiteralDfa43_0(active0, 0x20L);
      case 112:
         return jjMoveStringLiteralDfa43_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(41, active0);
}
static private int jjMoveStringLiteralDfa43_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(41, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(42, active0);
      return 43;
   }
   switch(curChar)
   {
      case 48:
         return jjMoveStringLiteralDfa44_0(active0, 0x20L);
      case 112:
         return jjMoveStringLiteralDfa44_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(42, active0);
}
static private int jjMoveStringLiteralDfa44_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(42, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(43, active0);
      return 44;
   }
   switch(curChar)
   {
      case 34:
         return jjMoveStringLiteralDfa45_0(active0, 0x20L);
      case 108:
         return jjMoveStringLiteralDfa45_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(43, active0);
}
static private int jjMoveStringLiteralDfa45_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(43, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(44, active0);
      return 45;
   }
   switch(curChar)
   {
      case 62:
         if ((active0 & 0x20L) != 0L)
            return jjStopAtPos(45, 5);
         break;
      case 105:
         return jjMoveStringLiteralDfa46_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(44, active0);
}
static private int jjMoveStringLiteralDfa46_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(44, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(45, active0);
      return 46;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa47_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(45, active0);
}
static private int jjMoveStringLiteralDfa47_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(45, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(46, active0);
      return 47;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa48_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(46, active0);
}
static private int jjMoveStringLiteralDfa48_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(46, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(47, active0);
      return 48;
   }
   switch(curChar)
   {
      case 116:
         return jjMoveStringLiteralDfa49_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(47, active0);
}
static private int jjMoveStringLiteralDfa49_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(47, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(48, active0);
      return 49;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa50_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(48, active0);
}
static private int jjMoveStringLiteralDfa50_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(48, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(49, active0);
      return 50;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa51_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(49, active0);
}
static private int jjMoveStringLiteralDfa51_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(49, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(50, active0);
      return 51;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa52_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(50, active0);
}
static private int jjMoveStringLiteralDfa52_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(50, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(51, active0);
      return 52;
   }
   switch(curChar)
   {
      case 47:
         return jjMoveStringLiteralDfa53_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(51, active0);
}
static private int jjMoveStringLiteralDfa53_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(51, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(52, active0);
      return 53;
   }
   switch(curChar)
   {
      case 118:
         return jjMoveStringLiteralDfa54_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(52, active0);
}
static private int jjMoveStringLiteralDfa54_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(52, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(53, active0);
      return 54;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa55_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(53, active0);
}
static private int jjMoveStringLiteralDfa55_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(53, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(54, active0);
      return 55;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa56_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(54, active0);
}
static private int jjMoveStringLiteralDfa56_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(54, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(55, active0);
      return 56;
   }
   switch(curChar)
   {
      case 46:
         return jjMoveStringLiteralDfa57_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(55, active0);
}
static private int jjMoveStringLiteralDfa57_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(55, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(56, active0);
      return 57;
   }
   switch(curChar)
   {
      case 109:
         return jjMoveStringLiteralDfa58_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(56, active0);
}
static private int jjMoveStringLiteralDfa58_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(56, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(57, active0);
      return 58;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa59_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(57, active0);
}
static private int jjMoveStringLiteralDfa59_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(57, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(58, active0);
      return 59;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa60_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(58, active0);
}
static private int jjMoveStringLiteralDfa60_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(58, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(59, active0);
      return 60;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa61_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(59, active0);
}
static private int jjMoveStringLiteralDfa61_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(59, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(60, active0);
      return 61;
   }
   switch(curChar)
   {
      case 120:
         return jjMoveStringLiteralDfa62_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(60, active0);
}
static private int jjMoveStringLiteralDfa62_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(60, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(61, active0);
      return 62;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa63_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(61, active0);
}
static private int jjMoveStringLiteralDfa63_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(61, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(62, active0);
      return 63;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa64_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(62, active0);
}
static private int jjMoveStringLiteralDfa64_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(62, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(63, active0);
      return 64;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa65_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(63, active0);
}
static private int jjMoveStringLiteralDfa65_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(63, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(64, active0);
      return 65;
   }
   switch(curChar)
   {
      case 59:
         return jjMoveStringLiteralDfa66_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(64, active0);
}
static private int jjMoveStringLiteralDfa66_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(64, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(65, active0);
      return 66;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa67_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(65, active0);
}
static private int jjMoveStringLiteralDfa67_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(65, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(66, active0);
      return 67;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa68_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(66, active0);
}
static private int jjMoveStringLiteralDfa68_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(66, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(67, active0);
      return 68;
   }
   switch(curChar)
   {
      case 104:
         return jjMoveStringLiteralDfa69_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(67, active0);
}
static private int jjMoveStringLiteralDfa69_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(67, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(68, active0);
      return 69;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa70_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(68, active0);
}
static private int jjMoveStringLiteralDfa70_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(68, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(69, active0);
      return 70;
   }
   switch(curChar)
   {
      case 114:
         return jjMoveStringLiteralDfa71_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(69, active0);
}
static private int jjMoveStringLiteralDfa71_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(69, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(70, active0);
      return 71;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa72_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(70, active0);
}
static private int jjMoveStringLiteralDfa72_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(70, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(71, active0);
      return 72;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa73_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(71, active0);
}
static private int jjMoveStringLiteralDfa73_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(71, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(72, active0);
      return 73;
   }
   switch(curChar)
   {
      case 116:
         return jjMoveStringLiteralDfa74_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(72, active0);
}
static private int jjMoveStringLiteralDfa74_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(72, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(73, active0);
      return 74;
   }
   switch(curChar)
   {
      case 61:
         return jjMoveStringLiteralDfa75_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(73, active0);
}
static private int jjMoveStringLiteralDfa75_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(73, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(74, active0);
      return 75;
   }
   switch(curChar)
   {
      case 85:
         return jjMoveStringLiteralDfa76_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(74, active0);
}
static private int jjMoveStringLiteralDfa76_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(74, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(75, active0);
      return 76;
   }
   switch(curChar)
   {
      case 84:
         return jjMoveStringLiteralDfa77_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(75, active0);
}
static private int jjMoveStringLiteralDfa77_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(75, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(76, active0);
      return 77;
   }
   switch(curChar)
   {
      case 70:
         return jjMoveStringLiteralDfa78_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(76, active0);
}
static private int jjMoveStringLiteralDfa78_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(76, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(77, active0);
      return 78;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa79_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(77, active0);
}
static private int jjMoveStringLiteralDfa79_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(77, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(78, active0);
      return 79;
   }
   switch(curChar)
   {
      case 56:
         return jjMoveStringLiteralDfa80_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(78, active0);
}
static private int jjMoveStringLiteralDfa80_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(78, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(79, active0);
      return 80;
   }
   switch(curChar)
   {
      case 34:
         return jjMoveStringLiteralDfa81_0(active0, 0x2000000000L);
      default :
         break;
   }
   return jjStartNfa_0(79, active0);
}
static private int jjMoveStringLiteralDfa81_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(79, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(80, active0);
      return 81;
   }
   switch(curChar)
   {
      case 62:
         if ((active0 & 0x2000000000L) != 0L)
            return jjStopAtPos(81, 37);
         break;
      default :
         break;
   }
   return jjStartNfa_0(80, active0);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0x948e164f00000000L, 0xe1e67870e1e778fL
};
static final long[] jjbitVec1 = {
   0x0L, 0x2100000000080000L, 0x40000L, 0x0L
};
static final long[] jjbitVec2 = {
   0x752000000L, 0x0L, 0x100000000000L, 0x0L
};
static final long[] jjbitVec3 = {
   0x400000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec4 = {
   0x0L, 0x0L, 0x0L, 0x2000000000000000L
};
static private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 2;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if ((0xaffffffe00000000L & l) != 0L)
                  {
                     if (kind > 14)
                        kind = 14;
                     jjCheckNAdd(1);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 11)
                        kind = 11;
                     jjCheckNAdd(0);
                  }
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(0);
                  break;
               case 1:
                  if ((0xaffffffe00000000L & l) == 0L)
                     break;
                  if (kind > 14)
                     kind = 14;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
               case 1:
                  if ((0x7ffffffebfffffffL & l) == 0L)
                     break;
                  kind = 14;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
               case 1:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 14)
                     kind = 14;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 2 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec0[i2] & l2) != 0L);
      case 1:
         return ((jjbitVec1[i2] & l2) != 0L);
      case 32:
         return ((jjbitVec2[i2] & l2) != 0L);
      case 33:
         return ((jjbitVec3[i2] & l2) != 0L);
      case 255:
         return ((jjbitVec4[i2] & l2) != 0L);
      default :
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, 
"\74\150\164\155\154\40\170\155\154\156\163\75\42\150\164\164\160\72\57\57\167\167\167\56\167\63\56\157\162\147\57\124\122\57\122\105\103\55\150\164\155\154\64\60\42\76", "\74\57\150\164\155\154\76", "\74\150\145\141\144\76", 
"\74\57\150\145\141\144\76", "\74\142\157\144\171\76", "\74\57\142\157\144\171\76", null, "\74", "\76", 
null, "\74\164\141\142\154\145\40", "\74\57\164\141\142\154\145\76", 
"\74\164\150\145\141\144\76", "\74\57\164\150\145\141\144\76", "\74\164\142\157\144\171\76", 
"\74\57\164\142\157\144\171\76", "\74\164\162\76", 
"\74\164\162\40\142\147\143\157\154\157\162\75\42\43\60\60\63\64\66\66\42\40\150\145\151\147\150\164\75\42\63\60\42\76", "\74\164\162\40\151\144\75\42", 
"\74\164\162\40\143\154\141\163\163\75\42\162\157\167\110\145\141\144\145\162\42\76", "\74\164\162\40\151\144\75\42\151\163\163\165\145\162\157\167", 
"\74\57\164\162\76", 
"\74\164\150\40\143\154\141\163\163\75\42\143\157\154\110\145\141\144\145\162\114\151\156\153\40\150\145\141\144\145\162\162\157\167\55", "\74\57\164\150\76", 
"\74\164\144\40\143\157\154\163\160\141\156\75\42\65\70\42\76", "\74\164\144\40\143\154\141\163\163\75\42", 
"\74\164\144\40\142\147\143\157\154\157\162\75\42\43\144\144\144\144\144\144\42\40\143\157\154\163\160\141\156\75\42\65\70\42\76", "\74\57\164\144\76", "\74\164\151\164\154\145\76", 
"\74\57\164\151\164\154\145\76", "\74\163\164\171\154\145\40", "\74\57\163\164\171\154\145\76", 
"\74\115\105\124\101\40\110\124\124\120\55\105\121\125\111\126\75\42\103\157\156\164\145\156\164\55\124\171\160\145\42\40\103\157\156\164\145\156\164\75\42\141\160\160\154\151\143\141\164\151\157\156\57\166\156\144\56\155\163\55\145\170\143\145\154\73\40\143\150\141\162\163\145\164\75\125\124\106\55\70\42\76", "\74\141\40\150\162\145\146\75\42", "\74\141\40\143\154\141\163\163\75\42", 
"\74\57\141\76", "\74\144\151\166\40", "\74\57\144\151\166\76", 
"\74\151\155\147\40\163\162\143\75\42", "\74\163\160\141\156", "\74\57\163\160\141\156\76", 
"\74\163\164\162\157\156\147\76", "\74\57\163\164\162\157\156\147\76", "\74\145\155\76", "\74\57\145\155\76", 
"\74\146\157\156\164", "\74\57\146\157\156\164\76", "\74\160\76", "\74\57\160\76", 
"\74\164\151\155\145\40", "\74\57\164\151\155\145\76", };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0xffffffffffffe1L, 
};
static final long[] jjtoSkip = {
   0x1eL, 
};
static protected SimpleCharStream input_stream;
static private final int[] jjrounds = new int[2];
static private final int[] jjstateSet = new int[4];
static protected char curChar;
/** Constructor. */
public LecturaDatosTokenManager(SimpleCharStream stream){
   if (input_stream != null)
      throw new TokenMgrError("ERROR: Second call to constructor of static lexer. You must use ReInit() to initialize the static variables.", TokenMgrError.STATIC_LEXER_ERROR);
   input_stream = stream;
}

/** Constructor. */
public LecturaDatosTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
static public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
static private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 2; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
static public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
static public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

static protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

static int curLexState = 0;
static int defaultLexState = 0;
static int jjnewStateCnt;
static int jjround;
static int jjmatchedPos;
static int jjmatchedKind;

/** Get the next Token. */
public static Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

static private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
static private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
static private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

}
